{"/home/travis/build/npmtest/node-npmtest-node-jvm/test.js":"/* istanbul instrument in package npmtest_node_jvm */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-node-jvm/lib.npmtest_node_jvm.js":"/* istanbul instrument in package npmtest_node_jvm */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_node_jvm = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_node_jvm = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-node-jvm/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-node-jvm && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_node_jvm */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_node_jvm\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_node_jvm.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_node_jvm.rollup.js'] =\n            local.assetsDict['/assets.npmtest_node_jvm.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_node_jvm.__dirname + '/lib.npmtest_node_jvm.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/index.js":"module.exports = require(\"./libs/jvm.js\");","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/jvm.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar EE = require(\"events\").EventEmitter;\n\nvar globalizer = require(\"./util/globalizer\");\n\nvar Classes = require(\"./classes\");\nvar Threads = require(\"./threads\");\nvar Scheduler = require(\"./scheduler\");\nvar Logger = require(\"./logger\");\n\nvar OPCODES = require(\"./opcodes\");\nvar Thread = require(\"./thread\");\n\nvar JVM = module.exports = function() {\n    if (this instanceof JVM) {\n        JVM.super_.call(this);\n        globalizer.add(\"LOG\", new Logger());\n        globalizer.add(\"CLASSES\", new Classes());\n        globalizer.add(\"THREADS\", new Threads());\n        globalizer.add(\"SCHEDULER\", new Scheduler());\n        globalizer.add(\"OPCODES\", OPCODES);\n        \n        THREADS.add(new Thread(\"main\"));\n        \n        this.entryPoint = {\n            className: null,\n            methodName: \"main\"\n        };\n    } else {\n        return new JVM();\n    }\n}\n\nutil.inherits(JVM, EE);\n\nJVM.prototype.setEntryPointClassName = function(className) {\n    this.entryPoint.className = className;\n}\n\nJVM.prototype.setEntryPointMethodName = function(methodName) {\n    this.entryPoint.methodName = methodName;\n}\n\nJVM.prototype.setLogLevel = function(level) {\n    LOG.setLogLevel(level);\n}\n\nJVM.prototype.loadClassFile = function(fileName) {\n    return CLASSES.loadClassFile(fileName);\n}\n\nJVM.prototype.loadClassFiles = function(dirName) {\n    var self = this;\n    CLASSES.addPath(dirName);\n    var files = fs.readdirSync(dirName);\n    files.forEach(function(file) {\n        var p = util.format(\"%s/%s\", dirName, file);\n        var stat = fs.statSync(p);\n        if (stat.isFile()) {\n            if (path.extname(file) === \".class\") {\n                self.loadClassFile(p);\n            }\n        } else if (stat.isDirectory()) {\n            self.loadClassFiles(p);\n        }\n    });\n}\n\nJVM.prototype.loadJSFile = function(fileName) {\n    return CLASSES.loadJSFile(fileName);\n}\n\nJVM.prototype.loadJarFile = function(fileName) {\n    return CLASSES.loadJarFile(fileName);\n}\n\nJVM.prototype.run = function() {\n    var self = this;\n    \n    CLASSES.clinit();\n    \n    var entryPoint = CLASSES.getEntryPoint(this.entryPoint.className, this.entryPoint.methodName);\n    if (!entryPoint) {\n        throw new Error(\"Entry point method is not found.\");\n    }\n        \n    entryPoint.run(arguments, function(code) {\n        var exit = function() {\n            SCHEDULER.tick(0, function() {\n                if (THREADS.count() === 1) {\n                    THREADS.remove(0);\n                    self.emit(\"exit\", code);\n                } else {\n                    exit();\n                }\n            });\n        };\n        exit();\n    });\n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/util/globalizer.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nmodule.exports.add = function(name, obj) {\n    global[name] = obj;\n}\n\nmodule.exports.remove = function(name) {\n    delete global[name];\n}","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/classes.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\n\nvar ClassArea = require(\"./classfile/classarea.js\");\nvar Frame = require(\"./frame.js\");\n\nvar ACCESS_FLAGS = require(\"./classfile/accessflags.js\");\n\nvar Classes = module.exports = function() {\n    if (this instanceof Classes) {\n        this.paths = [ __dirname ];\n        this.classes = {};\n        this.staticFields = {};\n    } else  {\n        return new Classes();\n    }\n}\n\nClasses.prototype.addPath = function(path) {\n    if (this.paths.indexOf(path) === -1) {\n        this.paths.push(path);\n    }\n}\n\nClasses.prototype.clinit = function() {\n    for(var className in this.classes) {\n        classArea = this.classes[className];\n        var clinit = this.getStaticMethod(className, \"<clinit>\", \"()V\");\n        if (clinit instanceof Frame) {\n            SCHEDULER.sync(function() {\n                LOG.debug(\"call \" + className + \".<clinit> ...\");\n                clinit.run([], function() {\n                    LOG.debug(\"call \" + className + \".<clinit> ... done\");\n                });\n            });\n        }\n    }\n}\n\nClasses.prototype.loadClassBytes = function(bytes) {\n    var classArea = new ClassArea(bytes);\n    this.classes[classArea.getClassName()] = classArea;\n    return classArea;\n}\n\nClasses.prototype.loadClassFile = function(fileName) {\n    LOG.debug(\"loading \" + fileName + \" ...\");\n    var bytes = fs.readFileSync(fileName);\n    var ca = this.loadClassBytes(bytes);\n    var classes = ca.getClasses();\n    for (var i=0; i<classes.length; i++) {\n        if (!this.classes[classes[i]]) {\n            this.loadClassFile(path.dirname(fileName) + path.sep + classes[i] + \".class\");\n        }\n    }\n    return ca;\n}\n\nClasses.prototype.loadJSFile = function(fileName) {\n    LOG.debug(\"loading \" + fileName + \" ...\");\n    var classArea = require(fileName);\n    this.classes[classArea.getClassName()] = classArea;\n    return classArea;\n}\n\nClasses.prototype.loadJarFile = function(fileName) {\n    var self = this;\n    \n    var AdmZip = require(\"adm-zip\");\n\n    var zip = new AdmZip(fileName);\n    var zipEntries = zip.getEntries();\n\n    var mainClass;\n    \n    zipEntries.forEach(function(zipEntry) {\n        if (!zipEntry.isDirectory) {\n            if (path.extname(zipEntry.entryName) === \".class\") {\n                LOG.debug(\"loading \" + fileName + '@' + zipEntry.entryName + \" ...\");\n                self.loadClassBytes(zipEntry.getData());\n            } else if (zipEntry.entryName === \"META-INF/MANIFEST.MF\") {\n                var manifest = zipEntry.getData().toString().split('\\n');\n                for(var i=0; i<manifest.length; i++) {\n                    var line = [];\n                    manifest[i].split(':').forEach(\n                        function(p) {\n                            line.push(p.trim());\n                        }\n                    );\n                    if (line[0] === \"Main-Class\") {\n                        mainClass = line[1];\n                        break;\n                    }\n                }                \n            }\n        }\n        return mainClass;\n    });    \n}\n\nClasses.prototype.getEntryPoint = function(className, methodName) {\n    for(var name in this.classes) {\n        var ca = this.classes[name];\n        if (ca instanceof ClassArea) {\n            if (!className || (className === ca.getClassName())) {\n                if (ACCESS_FLAGS.isPublic(ca.getAccessFlags())) {\n                    var methods = ca.getMethods();\n                    var cp = ca.getConstantPool();\n                    for(var i=0; i<methods.length; i++) {\n                        if\n                        (\n                         ACCESS_FLAGS.isPublic(methods[i].access_flags) &&\n                         ACCESS_FLAGS.isStatic(methods[i].access_flags) &&\n                         cp[methods[i].name_index].bytes === methodName\n                        )\n                        { return new Frame(ca, methods[i]); }\n                    }\n                }\n            }\n        }\n    }    \n}\n\nClasses.prototype.getClass = function(className) {\n    var ca = this.classes[className];\n    if (ca) {\n        return ca;\n    }\n    for(var i=0; i<this.paths.length; i++) {\n        var fileName = util.format(\"%s/%s\", this.paths[i], className);\n        if (fs.existsSync(fileName + \".js\")) {\n            return this.loadJSFile(fileName + \".js\");\n        }\n        if(fs.existsSync(fileName + \".class\")) {\n            return this.loadClassFile(fileName + \".class\");\n        }\n    }\n    throw new Error(util.format(\"Implementation of the %s class is not found.\", className));\n};\n\nClasses.prototype.getStaticField = function(className, fieldName) {\n    return this.staticFields[className + '.' + fieldName]; \n}\n\nClasses.prototype.setStaticField = function(className, fieldName, value) {\n    this.staticFields[className + '.' + fieldName] = value;\n}\n\nClasses.prototype.getStaticMethod = function(className, methodName, signature) {\n    var ca = this.getClass(className);  \n    if (ca instanceof ClassArea) {\n        var methods = ca.getMethods();\n        var cp = ca.getConstantPool();\n        for(var i=0; i<methods.length; i++) \n            if (ACCESS_FLAGS.isStatic(methods[i].access_flags)) \n                if (cp[methods[i].name_index].bytes === methodName)\n                    if (signature.toString() === cp[methods[i].signature_index].bytes)\n                        return new Frame(ca, methods[i]);\n    } else {\n        if (methodName in ca) {\n            return ca[methodName];\n        }\n    }\n    return null;\n};\n        \nClasses.prototype.getMethod = function(className, methodName, signature) {\n    var ca = this.getClass(className);\n    if (ca instanceof ClassArea) {\n        var methods = ca.getMethods();\n        var cp = ca.getConstantPool();\n        for(var i=0; i<methods.length; i++)\n            if (!ACCESS_FLAGS.isStatic(methods[i].access_flags)) \n                if (cp[methods[i].name_index].bytes === methodName) \n                    if (signature.toString() === cp[methods[i].signature_index].bytes) \n                        return new Frame(ca, methods[i]);\n    } else {\n        var o = new ca();\n        if (methodName in o) {\n           return o[methodName];\n        }\n    }\n    return null;\n};\n        \nClasses.prototype.newObject = function(className) {\n    var ca = this.getClass(className);\n    if (ca instanceof ClassArea) {\n        \n        var ctor = function() {};\n        ctor.prototype = this.newObject(ca.getSuperClassName());\n        var o = new ctor();\n        \n        o.getClassName = new Function(util.format(\"return \\\"%s\\\"\", className));\n        \n        var cp = ca.getConstantPool();\n        \n        ca.getFields().forEach(function(field) {\n            var fieldName = cp[field.name_index].bytes;\n            o[fieldName] = null;\n        });\n        \n        ca.getMethods().forEach(function(method) {\n            var methodName = cp[method.name_index].bytes;\n            o[methodName] = new Frame(ca, method);\n        });\n        \n        return o;\n    } else {\n        var o = new ca();\n        o.getClassName = new Function(util.format(\"return \\\"%s\\\"\", className));\n        return o;\n    }\n}\n\nClasses.prototype.newException = function(className, message, cause) {\n    var ex = this.newObject(className);\n    ex[\"<init>\"](message, cause);\n    return ex;\n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/classfile/classarea.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\"),\n    Reader = require(\"../util/reader.js\"),\n    TAGS = require(\"./tags.js\"),\n    ACCESS_FLAGS = require(\"./accessflags.js\"),\n    ATTRIBUTE_TYPES = require(\"./attributetypes.js\");\n\n\nvar ClassArea = module.exports = function(classBytes) {\n    if (this instanceof ClassArea) {\n        this.classImage = getClassImage(classBytes);\n    } else {\n        return new ClassArea(classBytes);\n    }\n}\n\nClassArea.prototype.getClassName = function() {    \n    return this.classImage.constant_pool[this.classImage.constant_pool[this.classImage.this_class].name_index].bytes;    \n}\n\nClassArea.prototype.getSuperClassName = function() {    \n    return this.classImage.constant_pool[this.classImage.constant_pool[this.classImage.super_class].name_index].bytes;    \n}\n\nClassArea.prototype.getAccessFlags = function() {\n    return this.classImage.access_flags;    \n}\n\nClassArea.prototype.getConstantPool = function() {\n    return this.classImage.constant_pool;\n}\n\nClassArea.prototype.getFields = function() {\n    return this.classImage.fields;\n}\n\nClassArea.prototype.getMethods = function() {\n    return this.classImage.methods;\n}\n\nClassArea.prototype.getClasses = function() {\n    var self = this;\n    var classes = [];\n    this.classImage.attributes.forEach(function(a) {\n        if (a.info.type === ATTRIBUTE_TYPES.InnerClasses) {\n            a.info.classes.forEach(function(c) {\n                classes.push(self.classImage.constant_pool[self.classImage.constant_pool[c.inner_class_info_index].name_index].bytes);\n                classes.push(self.classImage.constant_pool[self.classImage.constant_pool[c.outer_class_info_index].name_index].bytes);\n            });\n        }\n    });\n    return classes;\n}\n\nvar getClassImage = function(classBytes) {\n\n    var classImage = {};\n        \n    var getAttribues = function(attribute_name_index, bytes) {\n            \n        var reader = new Reader.create(bytes);\n        var attribute = { attribute_name_index: attribute_name_index };\n    \n    \n        var item = classImage.constant_pool[attribute_name_index];\n    \n        \n        switch(item.tag) {\n        \n            case TAGS.CONSTANT_Long:\n            case TAGS.CONSTANT_Float:\n            case TAGS.CONSTANT_Double:\n            case TAGS.CONSTANT_Integer:\n            case TAGS.CONSTANT_String:\n                attribute.type = ATTRIBUTE_TYPES.ConstantValue;\n                attribute.constantvalue_index = reader.read16();\n                return attribute;        \n            \n                \n            case TAGS.CONSTANT_Utf8:\n                \n                switch(item.bytes) {\n                    \n                    case ATTRIBUTE_TYPES.Code:\n                        attribute.type = ATTRIBUTE_TYPES.Code;\n                        attribute.max_stack = reader.read16();\n                        attribute.max_locals = reader.read16();\n                        var code_length = reader.read32();\n                        attribute.code = reader.readBytes(code_length);\n                        \n                        var exception_table_length = reader.read16();        \n                        attribute.exception_table = [];\n                        for(var i=0; i<exception_table_length; i++) {\n                            var start_pc = reader.read16();\n                            var end_pc = reader.read16();\n                            var handler_pc= reader.read16();\n                            var catch_type = reader.read16();\n                            attribute.exception_table.push({start_pc:start_pc,end_pc:end_pc,handler_pc:handler_pc,catch_type:catch_type });\n                        }\n\n                        var attributes_count = reader.read16();        \n                        attribute.attributes = [];\n                        for(var i=0; i<attributes_count; i++) {\n                            var attribute_name_index = reader.read16();\n                            var attribute_length = reader.read32();\n                            var info = reader.readBytes(attribute_length);\n                            attribute.attributes.push({ attribute_name_index: attribute_name_index, attribute_length: attribute_length, info: info });\n                        }\n                        return attribute;\n                        \n                    case ATTRIBUTE_TYPES.SourceFile:\n                        attribute.type = ATTRIBUTE_TYPES.SourceFile;\n                        attribute.sourcefile_index = reader.read16();\n                        return attribute;\n                    \n                    case ATTRIBUTE_TYPES.Exceptions:\n                        attribute.type = ATTRIBUTE_TYPES.Exceptions;\n                        var number_of_exceptions = reader.read16();\n                        attribute.exception_index_table = [];\n                        for(var i=0; i<number_of_exceptions; i++) {\n                            attribute.exception_index_table.push(reader.read16());\n                        }\n                        return attribute;\n                    \n                    case ATTRIBUTE_TYPES.InnerClasses:\n                        attribute.type = ATTRIBUTE_TYPES.InnerClasses;\n                        var number_of_classes = reader.read16();\n                        attribute.classes = [];\n                        for(var i=0; i<number_of_classes; i++) {\n                            var inner = {};\n                            inner.inner_class_info_index = reader.read16();\n                            inner.outer_class_info_index = reader.read16();\n                            inner.inner_name_index = reader.read16();\n                            inner.inner_class_access_flags = reader.read16();\n                            attribute.classes.push(inner);\n                        }\n                        return attribute;\n                    \n                    default:\n                        throw new Error(\"This attribute type is not supported yet. [\" + JSON.stringify(item) + \"]\");            \n                }\n                \n            default:\n                throw new Error(\"This attribute type is not supported yet. [\" + JSON.stringify(item) + \"]\");            \n        }\n    };\n    \n    \n    var reader = Reader.create(classBytes);\n    classImage.magic = reader.read32().toString(16);\n\n    classImage.version = {\n        minor_version: reader.read16(),\n        major_version: reader.read16()\n    };\n        \n    classImage.constant_pool = [ null ];\n    var constant_pool_count = reader.read16();\n    for(var i=1; i<constant_pool_count; i++) {        \n        var tag =  reader.read8();\n        switch(tag) {\n            case TAGS.CONSTANT_Class:\n                var name_index = reader.read16();\n                classImage.constant_pool.push( { tag: tag, name_index: name_index } );\n                break;\n            case TAGS.CONSTANT_Utf8:\n                var length = reader.read16();\n                var bytes = reader.readString(length);\n                classImage.constant_pool.push( { tag: tag, bytes: bytes } );\n                break;\n            case TAGS.CONSTANT_Methodref:\n                var class_index = reader.read16();\n                var name_and_type_index = reader.read16();\n                classImage.constant_pool.push( {  tag: tag, class_index: class_index, name_and_type_index: name_and_type_index } );\n                break;\n            case TAGS.CONSTANT_NameAndType:\n                var name_index = reader.read16();\n                var signature_index = reader.read16();\n                classImage.constant_pool.push( { tag: tag, name_index: name_index,  signature_index: signature_index } );                \n                break;\n            case TAGS.CONSTANT_Fieldref:\n                var class_index = reader.read16();\n                var name_and_type_index = reader.read16();\n                classImage.constant_pool.push( { tag: tag, class_index: class_index,  name_and_type_index: name_and_type_index } );                                \n                break;\n            case TAGS.CONSTANT_String:\n                var string_index = reader.read16();\n                classImage.constant_pool.push( { tag: tag, string_index: string_index } );                                                \n                break;\n            case TAGS.CONSTANT_Integer:\n                var bytes = reader.read32();\n                classImage.constant_pool.push( {  tag: tag, bytes: bytes } );                                                \n                break;\n            case TAGS.CONSTANT_Double:\n            case TAGS.CONSTANT_Long:\n                var bytes = new Buffer(8);\n                for (var b=0; b<8; b++) {\n                    bytes[b] = reader.read8();\n                }\n                classImage.constant_pool.push( {  tag: tag, bytes: bytes } );\n                classImage.constant_pool.push( null ); i++;\n                break;\n            case TAGS.CONSTANT_Fieldref:\n            case TAGS.CONSTANT_Methodref:\n            case TAGS.CONSTANT_InterfaceMethodref:\n                var class_index = reader.read16();\n                var name_and_type_index = reader.read16();\n                classImage.constant_pool.push( {  tag: tag, class_index: class_index, name_and_type_index:name_and_type_index } );                                                \n                break;\n            default:                \n                throw new Error(util.format(\"tag %s is not supported.\", tag));\n        }\n    }\n        \n    classImage.access_flags = reader.read16();\n    \n    classImage.this_class = reader.read16();\n    \n    classImage.super_class = reader.read16();\n\n    \n    classImage.interfaces = [];\n    var interfaces_count = reader.read16();\n    for(var i=0; i<interfaces_count; i++) {\n        var index = reader.read16();\n        if (index != 0){\n            classImage.interfaces.push(index);\n        }\n    }\n        \n    classImage.fields = [];\n    var fields_count = reader.read16();\n    for(var i=0; i<fields_count; i++) {\n        var access_flags = reader.read16();\n        var name_index = reader.read16();\n        var descriptor_index = reader.read16();\n        var attributes_count = reader.read16();\n        var field_info = {\n            access_flags: access_flags,\n            name_index: name_index,\n            descriptor_index: descriptor_index,\n            attributes_count: attributes_count,\n            attributes: []\n        }\n        for(var j=0; j <attributes_count; j++) {\n            var attribute_name_index = reader.read16();\n            var attribute_length = reader.read32();\n            var constantvalue_index = reader.read16();            \n            var attribute = {\n                attribute_name_index: attribute_name_index,\n                attribute_length: attribute_length,\n                constantvalue_index: constantvalue_index\n            }            \n            field_info.attributes.push(attribute);\n        }\n        classImage.fields.push(field_info);\n    }    \n    \n    \n    classImage.methods = [];\n    var methods_count = reader.read16();\n    for(var i=0; i<methods_count; i++) {\n        var access_flags = reader.read16();\n        var name_index = reader.read16();\n        var signature_index = reader.read16();\n        var attributes_count = reader.read16();\n        var method_info  = {\n            access_flags: access_flags,\n            name_index: name_index,\n            signature_index: signature_index,\n            attributes_count: attributes_count,\n            attributes: []\n        }        \n        for(var j=0; j <attributes_count; j++) {\n            var attribute_name_index = reader.read16();\n            var attribute_length = reader.read32();\n            var info = getAttribues(attribute_name_index, reader.readBytes(attribute_length));            \n            var attribute = {\n                attribute_name_index: attribute_name_index,\n                attribute_length: attribute_length,\n                info: info\n            }\n            method_info.attributes.push(attribute);\n        }\n                \n        classImage.methods.push(method_info);\n    }\n    \n    \n    classImage.attributes = [];\n    var attributes_count = reader.read16();\n    for(var i=0; i<attributes_count; i++) {\n            var attribute_name_index = reader.read16();\n            var attribute_length = reader.read32();\n            var info = getAttribues(attribute_name_index, reader.readBytes(attribute_length));            \n            var attribute = {\n                attribute_name_index: attribute_name_index,\n                attribute_length: attribute_length,\n                info: info\n            }\n            classImage.attributes.push(attribute);        \n    }\n    \n    return classImage;\n \n};\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/util/reader.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar Reader = function(bytes, offset) {\n    if (this instanceof Reader) {\n        this.bytes = bytes;\n        this.offset = offset || 0;\n    } else {\n        return new Reader(bytes, offset);\n    }\n}\n\nReader.prototype.read8 = function() {\n    var data = this.bytes.readUInt8(this.offset);\n    this.offset += 1;\n    return data;\n}\n\nReader.prototype.read16 = function() {\n    var data = this.bytes.readUInt16BE(this.offset);\n    this.offset += 2;\n    return data;\n}\n\nReader.prototype.read32 = function() {\n    var data = this.bytes.readUInt32BE(this.offset);\n    this.offset += 4;\n    return data;\n}\n\nReader.prototype.readString = function(length) {\n    var data = this.bytes.toString(null, this.offset, this.offset + length)\n    this.offset += length;\n    return data;\n}\n\nReader.prototype.readBytes = function(length) {\n    var data = this.bytes.slice(this.offset, this.offset + length);\n    this.offset += length;\n    return data;\n}\n\n\nmodule.exports.create = function(bytes, offset) {\n    return new Reader(bytes, offset);    \n}\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/classfile/tags.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\n\nvar TAGS = module.exports = {\n    CONSTANT_Class: 7,\n    CONSTANT_Fieldref: 9,\n    CONSTANT_Methodref: 10,\n    CONSTANT_InterfaceMethodref: 11,\n    CONSTANT_String: 8,\n    CONSTANT_Integer: 3,\n    CONSTANT_Float: 4,\n    CONSTANT_Long: 5,\n    CONSTANT_Double: 6,\n    CONSTANT_NameAndType: 12,\n    CONSTANT_Utf8: 1,\n    CONSTANT_Unicode: 2,\n    toString: function(tag) {\n        for(var name in this) {\n            if (this[name] === tag) {\n                return name;\n            }\n        }\n        return null;\n    }        \n};\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/classfile/accessflags.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar checkFlag = function(flag) {\n    return function(flags) {\n        return ((flags & flag) === flag);\n    }\n};\n\nvar ACCESS_FLAGS = module.exports = {\n    ACC_PUBLIC: 0x0001,\n    ACC_PRIVATE: 0x0002,\n    ACC_PROTECTED: 0x0004,\n    ACC_STATIC: 0x0008,\n    ACC_FINAL: 0x0010,\n    ACC_SYNCHRONIZED: 0x0020,\n    ACC_VOLATILE: 0x0040,\n    ACC_TRANSIENT: 0x0080,\n    ACC_NATIVE: 0x0100,\n    ACC_INTERFACE: 0x0200,\n    ACC_ABSTRACT: 0x0400,\n    toString: function(flags) {\n        var flagNames = [];\n        for(var flag in this) {\n            if ((this[flag] & flags) === this[flag]) {\n                flagNames.push(flag);\n            }\n        }\n        return flagNames.toString();\n    },\n    isPublic:       function(flags) { return checkFlag(this.ACC_PUBLIC)(flags) },\n    isPrivate:      function(flags) { return checkFlag(this.ACC_PRIVATE)(flags) },\n    isProtected:    function(flags) { return checkFlag(this.ACC_PROTECTED)(flags) },\n    isStatic:       function(flags) { return checkFlag(this.ACC_STATIC)(flags) },\n    isFinal:        function(flags) { return checkFlag(this.ACC_FINAL)(flags) },\n    isSynchronized: function(flags) { return checkFlag(this.ACC_SYNCHRONIZED)(flags) },\n    isVolatile:     function(flags) { return checkFlag(this.ACC_VOLATILE)(flags) },\n    isTransient:    function(flags) { return checkFlag(this.ACC_TRANSIENT)(flags) },\n    isNative:       function(flags) { return checkFlag(this.ACC_NATIVE)(flags) },\n    isInterface:    function(flags) { return checkFlag(this.ACC_INTERFACE)(flags) },\n    isAbstract:     function(flags) { return checkFlag(this.ACC_ABSTRACT)(flags) }\n};\n\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/classfile/attributetypes.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar ATTRIBUTE_TYPES = module.exports = {\n    ConstantValue:  \"ConstantValue\",\n    Code: \"Code\",\n    Exceptions: \"Exceptions\",\n    InnerClasses: \"InnerClasses\",\n    Synthetic: \"Synthetic\",\n    SourceFile: \"SourceFile\",\n    LineNumberTable: \"LineNumberTable\",\n    LocalVariableTable: \"LocalVariableTable\",\n    Deprecated: \"Deprecated\"\n};\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/frame.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\n\nvar Numeric = require(\"./util/numeric\");\nvar Signature = require(\"./classfile/signature\");\n\nvar TAGS = require(\"./classfile/tags\");\nvar ATTRIBUTE_TYPES = require(\"./classfile/attributetypes\");\n\nvar Frame = module.exports = function(classArea, method) {\n    if (this instanceof Frame) {\n        this._pid = 0; // default main thread\n        this._cp = classArea.getConstantPool();\n        \n        for(var i=0; i<method.attributes.length; i++) {\n            if (method.attributes[i].info.type === ATTRIBUTE_TYPES.Code) {\n                this._code = method.attributes[i].info.code;\n                this._exception_table = method.attributes[i].info.exception_table;\n                this._locals = new Array(method.attributes[i].info.max_locals);\n                break;\n            }\n        }\n        \n    } else {\n        return new Frame(classArea, method);\n    }\n}\n\nFrame.prototype.setPid = function(pid) {\n    this._pid = pid;\n}\n\nFrame.prototype._read8 = function() {\n    return this._code[this._ip++];\n};\n\nFrame.prototype._read16 = function() {\n    return this._read8()<<8 | this._read8();\n};\n\nFrame.prototype._read32 = function() {\n    return this._read16()<<16 | this._read16();\n};\n\nFrame.prototype._throw = function(ex) { \n    var handler_pc = null;\n \n    for(var i=0; i<this._exception_table.length; i++) {\n        if (this._ip >= this._exception_table[i].start_pc && this._ip <= this._exception_table[i].end_pc) {\n            if (this._exception_table[i].catch_type === 0) {\n                handler_pc = this._exception_table[i].handler_pc;             \n            } else {\n                var name = this._cp[this._cp[this._exception_table[i].catch_type].name_index].bytes;\n                if (name === ex.getClassName()) {\n                    handler_pc = this._exception_table[i].handler_pc;\n                    break;\n                }\n            }\n        }\n    }\n    \n    if (handler_pc != null) {\n        this._stack.push(ex);\n        this._ip = handler_pc;      \n    } else {\n        throw ex;\n    }\n}\n\nFrame.prototype.run = function(args, done) {\n    var self = this;\n    \n    this._ip = 0;\n    this._stack = [];\n    this._widened = false;\n       \n    for(var i=0; i<args.length; i++) {\n        this._locals[i] = args[i];\n    }\n    \n    var step = function() {\n        \n        SCHEDULER.tick(self._pid, function() {\n            var opCode = self._read8()\n            \n            switch (opCode) {\n                \n                case OPCODES.return:\n                    return done();\n                    \n                case OPCODES.ireturn:\n                case OPCODES.lreturn:\n                case OPCODES.freturn:\n                case OPCODES.dreturn:\n                case OPCODES.areturn:\n                    return done(self._stack.pop());\n                \n                default:\n                    var opName = OPCODES.toString(opCode);\n                    \n                    if (!(opName in self)) {\n                        throw new Error(util.format(\"Opcode %s [%s] is not supported.\", opName, opCode));\n                    }\n        \n                    self[opName]( function() { return step(); } );\n                    break;\n            }\n        });\n        \n    };\n    \n    step();\n}\n\n\nFrame.prototype.nop = function(done) {\n    return done();\n}\n\nFrame.prototype.aconst_null = function(done) {\n    this._stack.push(null);\n    return done();\n}\n\nFrame.prototype.iconst_m1 = function(done) {\n    this._stack.push(-1);\n    return done();\n}\n\nFrame.prototype.iconst_0 = function(done) {\n    this._stack.push(0);\n    return done();\n}\n\nFrame.prototype.lconst_0 = function(done) {\n    this._stack.push(0);\n    return done();\n}\n\nFrame.prototype.fconst_0 = function(done) {\n    this._stack.push(0);\n    return done();\n}\n\nFrame.prototype.dconst_0 = function(done) {\n    this._stack.push(0);\n    return done();\n}\n\nFrame.prototype.iconst_1 = function(done) {\n    this._stack.push(1);\n    return done();\n}\n\nFrame.prototype.lconst_1 = function(done) {\n    this._stack.push(1);\n    return done();\n}\n\nFrame.prototype.fconst_1 = function(done) {\n    this._stack.push(1);\n    return done();\n}\n\nFrame.prototype.dconst_1 = function(done) {\n    this._stack.push(1);\n    return done();\n}\n\nFrame.prototype.iconst_2 = function(done) {\n    this._stack.push(2);\n    return done();\n}\n\nFrame.prototype.fconst_2 = function(done) {\n    this._stack.push(2);\n    return done();\n}\n\nFrame.prototype.iconst_3 = function(done) {\n    this._stack.push(3);\n    return done();\n}\n\nFrame.prototype.iconst_4 = function(done) {\n    this._stack.push(4);\n    return done();\n}\n\nFrame.prototype.iconst_4 = function(done) {\n    this._stack.push(5);\n    return done();\n}\n\nFrame.prototype.iconst_5 = function(done) {\n    this._stack.push(5);\n    return done();\n}\n\nFrame.prototype.sipush = function(done) {\n    this._stack.push(this._read16());\n}\n\nFrame.prototype.bipush = function(done) {\n    this._stack.push(this._read8());\n    return done();\n}\n\nFrame.prototype.ldc = function(done) {\n    var constant = this._cp[this._read8()];\n    switch(constant.tag) {\n        case TAGS.CONSTANT_String:                        \n            this._stack.push(this._cp[constant.string_index].bytes);\n            break;\n        default:\n            throw new Error(\"not support constant type\");\n    }\n    return done();\n}\n\nFrame.prototype.ldc_w = function(done) {\n    var constant = this._cp[this._read16()];\n    switch(constant.tag) {\n        case TAGS.CONSTANT_String:                        \n            this._stack.push(this._cp[constant.string_index].bytes);\n            break;\n        default:\n            throw new Error(\"not support constant type\");\n    }\n    return done();\n}\n\nFrame.prototype.ldc2_w = function(done) {\n    var constant = this._cp[this._read16()];\n    switch(constant.tag) {\n        case TAGS.CONSTANT_String:                        \n            this._stack.push(this._cp[constant.string_index].bytes);\n            break;\n        case TAGS.CONSTANT_Long:\n            this._stack.push(Numeric.getLong(constant.bytes));\n            break;\n        case TAGS.CONSTANT_Double:\n            this._stack.push(constant.bytes.readDoubleBE(0));\n            break;\n        default:\n            throw new Error(\"not support constant type\");\n    }\n    return done();\n}\n\nFrame.prototype.iload = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._stack.push(this._locals[idx]);\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.lload = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._stack.push(this._locals[idx]);\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.fload = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._stack.push(this._locals[idx]);\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.dload = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._stack.push(this._locals[idx]);\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.aload = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._stack.push(this._locals[idx]);\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.iload_0 = function(done) {\n    this._stack.push(this._locals[0]);\n    return done();\n}\n\nFrame.prototype.lload_0 = function(done) {\n    this._stack.push(this._locals[0]);\n    return done();\n}\n\nFrame.prototype.fload_0 = function(done) {\n    this._stack.push(this._locals[0]);\n    return done();\n}\n\nFrame.prototype.fload_0 = function(done) {\n    this._stack.push(this._locals[0]);\n    return done();\n}\n\nFrame.prototype.dload_0 = function(done) {\n    this._stack.push(this._locals[0]);\n    return done();\n}\n\nFrame.prototype.aload_0 = function(done) {\n    this._stack.push(this._locals[0]);\n    return done();\n}\n\nFrame.prototype.iload_1 = function(done) {\n    this._stack.push(this._locals[1]);\n    return done();\n}\n\nFrame.prototype.lload_1 = function(done) {\n    this._stack.push(this._locals[1]);\n    return done();\n}\n\nFrame.prototype.fload_1 = function(done) {\n    this._stack.push(this._locals[1]);\n    return done();\n}\n\nFrame.prototype.fload_1 = function(done) {\n    this._stack.push(this._locals[1]);\n    return done();\n}\n\nFrame.prototype.dload_1 = function(done) {\n    this._stack.push(this._locals[1]);\n    return done();\n}\n\nFrame.prototype.aload_1 = function(done) {\n    this._stack.push(this._locals[1]);\n    return done();\n}\n\nFrame.prototype.iload_2 = function(done) {\n    this._stack.push(this._locals[2]);\n    return done();\n}\n\nFrame.prototype.lload_2 = function(done) {\n    this._stack.push(this._locals[2]);\n    return done();\n}\n\nFrame.prototype.fload_2 = function(done) {\n    this._stack.push(this._locals[2]);\n    return done();\n}\n\nFrame.prototype.fload_2 = function(done) {\n    this._stack.push(this._locals[2]);\n    return done();\n}\n\nFrame.prototype.dload_2 = function(done) {\n    this._stack.push(this._locals[2]);\n    return done();\n}\n\nFrame.prototype.aload_2 = function(done) {\n    this._stack.push(this._locals[2]);\n    return done();\n}\n\nFrame.prototype.iload_3 = function(done) {\n    this._stack.push(this._locals[3]);\n    return done();\n}\n\nFrame.prototype.lload_3 = function(done) {\n    this._stack.push(this._locals[3]);\n    return done();\n}\n\nFrame.prototype.fload_3 = function(done) {\n    this._stack.push(this._locals[3]);\n    return done();\n}\n\nFrame.prototype.fload_3 = function(done) {\n    this._stack.push(this._locals[3]);\n    return done();\n}\n\nFrame.prototype.dload_3 = function(done) {\n    this._stack.push(this._locals[3]);\n    return done();\n}\n\nFrame.prototype.aload_3 = function(done) {\n    this._stack.push(this._locals[3]);\n    return done();\n}\n\nFrame.prototype.iaload = function(done) {\n    var idx = this._stack.pop();\n    var refArray = this._stack.pop();\n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        this._stack.push(refArray[idx]);\n    }\n    \n    return done();\n}\n\nFrame.prototype.laload = function(done) {\n    var idx = this._stack.pop();\n    var refArray = this._stack.pop();\n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        this._stack.push(refArray[idx]);\n    }\n    \n    return done();\n}\n\nFrame.prototype.faload = function(done) {\n    var idx = this._stack.pop();\n    var refArray = this._stack.pop();\n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        this._stack.push(refArray[idx]);\n    }\n    \n    return done();\n}\n\n\nFrame.prototype.daload = function(done) {\n    var idx = this._stack.pop();\n    var refArray = this._stack.pop();\n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        this._stack.push(refArray[idx]);\n    }\n    \n    return done();\n}\n\nFrame.prototype.aaload = function(done) {\n    var idx = this._stack.pop();\n    var refArray = this._stack.pop();\n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        this._stack.push(refArray[idx]);\n    }\n    \n    return done();\n}\n\nFrame.prototype.baload = function(done) {\n    var idx = this._stack.pop();\n    var refArray = this._stack.pop();\n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        this._stack.push(refArray[idx]);\n    }\n    \n    return done();\n}\n\nFrame.prototype.caload = function(done) {\n    var idx = this._stack.pop();\n    var refArray = this._stack.pop();\n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        this._stack.push(refArray[idx]);\n    }\n    \n    return done();\n}\n\nFrame.prototype.saload = function(done) {\n    var idx = this._stack.pop();\n    var refArray = this._stack.pop();\n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        this._stack.push(refArray[idx]);\n    }\n    \n    return done();\n}\n\nFrame.prototype.istore = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._locals[idx] = this._stack.pop();\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.lstore = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._locals[idx] = this._stack.pop();\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.fstore = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._locals[idx] = this._stack.pop();\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.dstore = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._locals[idx] = this._stack.pop();\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.astore = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    this._locals[idx] = this._stack.pop();\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.istore_0 = function(done) {\n    this._locals[0] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.lstore_0 = function(done) {\n    this._locals[0] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.fstore_0 = function(done) {\n    this._locals[0] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.dstore_0 = function(done) {\n    this._locals[0] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.astore_0 = function(done) {\n    this._locals[0] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.istore_1 = function(done) {\n    this._locals[1] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.lstore_1 = function(done) {\n    this._locals[1] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.fstore_1 = function(done) {\n    this._locals[1] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.dstore_1 = function(done) {\n    this._locals[1] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.astore_1 = function(done) {\n    this._locals[1] = this._stack.pop();\n    return done();\n}\n\n\nFrame.prototype.istore_2 = function(done) {\n    this._locals[2] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.lstore_2 = function(done) {\n    this._locals[2] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.fstore_2 = function(done) {\n    this._locals[2] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.dstore_2 = function(done) {\n    this._locals[2] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.astore_2 = function(done) {\n    this._locals[2] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.istore_3 = function(done) {\n    this._locals[3] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.lstore_3 = function(done) {\n    this._locals[3] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.fstore_3 = function(done) {\n    this._locals[3] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.dstore_3 = function(done) {\n    this._locals[3] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.astore_3 = function(done) {\n    this._locals[3] = this._stack.pop();\n    return done();\n}\n\nFrame.prototype.iastore = function(done) {\n    var val = this._stack.pop();\n    var idx = this._stack.pop();                \n    var refArray = this._stack.pop();\n    \n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        refArray[idx] = val;\n    }\n    \n    return done();\n}\n\nFrame.prototype.lastore = function(done) {\n    var val = this._stack.pop();\n    var idx = this._stack.pop();                \n    var refArray = this._stack.pop();\n    \n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        refArray[idx] = val;\n    }\n    \n    return done();\n}\n\nFrame.prototype.fastore = function(done) {\n    var val = this._stack.pop();\n    var idx = this._stack.pop();                \n    var refArray = this._stack.pop();\n    \n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        refArray[idx] = val;\n    }\n    \n    return done();\n}\n\nFrame.prototype.dastore = function(done) {\n    var val = this._stack.pop();\n    var idx = this._stack.pop();                \n    var refArray = this._stack.pop();\n    \n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        refArray[idx] = val;\n    }\n    \n    return done();\n}\n\nFrame.prototype.aastore = function(done) {\n    var val = this._stack.pop();\n    var idx = this._stack.pop();                \n    var refArray = this._stack.pop();\n    \n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        refArray[idx] = val;\n    }\n    \n    return done();\n}\n\nFrame.prototype.bastore = function(done) {\n    var val = this._stack.pop();\n    var idx = this._stack.pop();                \n    var refArray = this._stack.pop();\n    \n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        refArray[idx] = val;\n    }\n    \n    return done();\n}\n\nFrame.prototype.castore = function(done) {\n    var val = this._stack.pop();\n    var idx = this._stack.pop();                \n    var refArray = this._stack.pop();\n    \n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        refArray[idx] = val;\n    }\n    \n    return done();\n}\n\nFrame.prototype.sastore = function(done) {\n    var val = this._stack.pop();\n    var idx = this._stack.pop();                \n    var refArray = this._stack.pop();\n    \n    \n    var ex = null;\n    \n    if (!refArray) {\n        ex = CLASSES.newException(\"java/lang/NullPointerException\");\n    } else if (idx < 0 || idx >= refArray.length) {\n        ex = CLASSES.newException(\"java/lang/ArrayIndexOutOfBoundsException\", idx);\n    }\n    \n    if (ex) {\n        this._throw(ex);\n    } else {\n        refArray[idx] = val;\n    }\n    \n    return done();\n}\n\nFrame.prototype.pop = function(done) {\n    this._stack.pop();\n    return done();\n}\n\nFrame.prototype.pop2 = function(done) {\n    this._stack.pop();\n    return done();\n}\n\nFrame.prototype.dup = function(done) {\n    var val = this._stack.pop();\n    this._stack.push(val);\n    this._stack.push(val);\n    return done();\n}\n\nFrame.prototype.dup_x1 = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val1);\n    this._stack.push(val2);\n    this._stack.push(val1);\n    return done();\n}\n\nFrame.prototype.dup_x2 = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    var val3 = this._stack.pop();    \n    this._stack.push(val1);\n    this._stack.push(val3);\n    this._stack.push(val2);    \n    this._stack.push(val1);\n    return done();\n}\n\nFrame.prototype.dup2 = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2);\n    this._stack.push(val1);\n    this._stack.push(val2);\n    this._stack.push(val1);\n    return done();\n}\n\nFrame.prototype.dup2_x1 = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    var val3 = this._stack.pop();\n    this._stack.push(val2);\n    this._stack.push(val1);\n    this._stack.push(val3);\n    this._stack.push(val2);\n    this._stack.push(val1);\n    return done();\n}\n\nFrame.prototype.dup2_x2 = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    var val3 = this._stack.pop();\n    var val4 = this._stack.pop();\n    this._stack.push(val2);\n    this._stack.push(val1);\n    this._stack.push(val4);\n    this._stack.push(val3);\n    this._stack.push(val2);\n    this._stack.push(val1);\n    return done();\n}\n\n\nFrame.prototype.swap = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val1);\n    this._stack.push(val2);\n    return done();\n}\n\n\nFrame.prototype.iinc = function(done) {\n    var idx = this._widened ? this._read16() : this._read8();\n    var val = this._widened ? this._read16() : this._read8();\n    this._locals[idx] += val\n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.iadd = function(done) {\n    this._stack.push(this._stack.pop() + this._stack.pop());\n    return done();\n}\n\nFrame.prototype.ladd = function(done) {\n    this._stack.push(this._stack.pop() + this._stack.pop());\n    return done();\n}\n\nFrame.prototype.dadd = function(done) {\n    this._stack.push(this._stack.pop() + this._stack.pop());\n    return done();\n}\n\nFrame.prototype.fadd = function(done) {\n    this._stack.push(this._stack.pop() + this._stack.pop());\n    return done();\n}\n\nFrame.prototype.isub = function(done) {\n    this._stack.push(- this._stack.pop() + this._stack.pop());\n    return done();\n}\n\nFrame.prototype.lsub = function(done) {\n    this._stack.push(- this._stack.pop() + this._stack.pop());\n    return done();\n}\n\nFrame.prototype.dsub = function(done) {\n    this._stack.push(- this._stack.pop() + this._stack.pop());\n    return done();\n}\n\nFrame.prototype.fsub = function(done) {\n    this._stack.push(- this._stack.pop() + this._stack.pop());\n    return done();\n}\n\nFrame.prototype.imul = function(done) {\n    this._stack.push(this._stack.pop() * this._stack.pop());\n    return done();\n}\n\nFrame.prototype.lmul = function(done) {\n    this._stack.push(this._stack.pop() * this._stack.pop());\n    return done();\n}\n\nFrame.prototype.dmul = function(done) {\n    this._stack.push(this._stack.pop() * this._stack.pop());\n    return done();\n}\n\nFrame.prototype.fmul = function(done) {\n    this._stack.push(this._stack.pop() * this._stack.pop());\n    return done();\n}\n\nFrame.prototype.idiv = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    if (val1 === 0) {\n        this._throw(CLASSES.newException(\"java/lang/ArithmeticException\"));\n    } else {\n        this._stack.push(val2 / val1);\n    }\n    return done();\n}\n\nFrame.prototype.ldiv = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    if (val1 === 0) {\n        this._throw(CLASSES.newException(\"java/lang/ArithmeticException\"));\n    } else {\n        this._stack.push(val2 / val1);\n    }\n    return done();\n}\n\nFrame.prototype.ddiv = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 / val1);\n    return done();\n}\n\nFrame.prototype.fdiv = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 / val1);\n    return done();\n}\n\nFrame.prototype.irem = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 % val1);\n    return done();\n}\n\nFrame.prototype.lrem = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 % val1);\n    return done();\n}\n\nFrame.prototype.drem = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 % val1);\n    return done();\n}\n\nFrame.prototype.frem = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 % val1);\n    return done();\n}\n\nFrame.prototype.ineg = function(done) {\n    this._stack.push(- this._stack.pop());\n    return done();\n}\n\nFrame.prototype.lneg = function(done) {\n    this._stack.push(- this._stack.pop());\n    return done();\n}\n\nFrame.prototype.dneg = function(done) {\n    this._stack.push(- this._stack.pop());\n    return done();\n}\n\nFrame.prototype.fneg = function(done) {\n    this._stack.push(- this._stack.pop());\n    return done();\n}\n\nFrame.prototype.ishl = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 << val1);\n    return done();\n}\n\nFrame.prototype.lshl = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 << val1);\n    return done();\n}\n\nFrame.prototype.ishr = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 >> val1);\n    return done();\n}\n\nFrame.prototype.lshr = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 >> val1);\n    return done();\n}\n\nFrame.prototype.iushr = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 >>> val1);\n    return done();\n}\n\nFrame.prototype.lushr = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    this._stack.push(val2 >>> val1);\n    return done();\n}\n\nFrame.prototype.iand = function(done) {\n    this._stack.push(this._stack.pop() & this._stack.pop());\n    return done();\n}\n\nFrame.prototype.land = function(done) {\n    this._stack.push(this._stack.pop() & this._stack.pop());\n    return done();\n}\n\nFrame.prototype.ior = function(done) {\n    this._stack.push(this._stack.pop() | this._stack.pop());\n    return done();\n}\n\nFrame.prototype.lor = function(done) {\n    this._stack.push(this._stack.pop() | this._stack.pop());\n    return done();\n}\n\nFrame.prototype.ixor = function(done) {\n    this._stack.push(this._stack.pop() ^ this._stack.pop());\n    return done();\n}\n\nFrame.prototype.lxor = function(done) {\n    this._stack.push(this._stack.pop() ^ this._stack.pop());\n    return done();\n}\n\nFrame.prototype.lcmp = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    if (val2 > val1) {\n        this._stack.push(1);\n    } else if (val2 < val1) {\n        this._stack.push(-1);\n    } else {\n        this._stack.push(0);\n    }\n    return done();\n}\n\nFrame.prototype.fcmpl = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    if (isNaN(val1) || isNaN(val2)) {\n        this._stack.push(-1);\n    } else if (val2 > val1) {\n        this._stack.push(1);\n    } else if (val2 < val1) {\n        this._stack.push(-1);\n    } else {\n        this._stack.push(0);\n    }    \n    return done;\n}\n\nFrame.prototype.fcmpg = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    if (isNaN(val1) || isNaN(val2)) {\n        this._stack.push(1);\n    } else if (val2 > val1) {\n        this._stack.push(1);\n    } else if (val2 < val1) {\n        this._stack.push(-1);\n    } else {\n        this._stack.push(0);\n    }    \n    return done;\n}\n\nFrame.prototype.dcmpl = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    if (isNaN(val1) || isNaN(val2)) {\n        this._stack.push(-1);\n    } else if (val2 > val1) {\n        this._stack.push(1);\n    } else if (val2 < val1) {\n        this._stack.push(-1);\n    } else {\n        this._stack.push(0);\n    }    \n    return done;\n}\n\nFrame.prototype.dcmpg = function(done) {\n    var val1 = this._stack.pop();\n    var val2 = this._stack.pop();\n    if (isNaN(val1) || isNaN(val2)) {\n        this._stack.push(1);\n    } else if (val2 > val1) {\n        this._stack.push(1);\n    } else if (val2 < val1) {\n        this._stack.push(-1);\n    } else {\n        this._stack.push(0);\n    }    \n    return done;\n}\n\n\nFrame.prototype.newarray = function(done) {\n    var type = this._read8();  \n    var size = this._stack.pop();\n    if (size < 0) {\n        this._throw(CLASSES.newException(\"java/lang/NegativeSizeException\"));\n    } else {\n        this._stack.push(new Array(size));\n    }\n    return done();    \n}\n\n\nFrame.prototype.anewarray = function(done) {\n    var idx = this._read16();\n    var className = this._cp[this._cp[idx].name_index].bytes;       \n    var size = this._stack.pop();\n    if (size < 0) {\n        this._throw(CLASSES.newException(\"java/lang/NegativeSizeException\"));\n    } else {\n        this._stack.push(new Array(size));\n    }\n    return done();\n}\n\nFrame.prototype.multianewarray = function(done) {\n    var idx = this._read16();\n    var type = this._cp[this._cp[idx].name_index].bytes;       \n    var dimensions = this._read8();\n    var lengths = new Array(dimensions);\n    for(var i=0; i<dimensions; i++) {\n        lengths[i] = this._stack.pop();\n    }\n    var createMultiArray = function(lengths) {\n        if (lengths.length === 0) {\n            return null;\n        }\n        var length = lengths.shift();\n        var array = new Array(length);\n        for (var i=0; i<length; i++) {\n            array[i] = createMultiArray(lengths);\n        }\n        return array;\n    };\n    this._stack.push(createMultiArray(lengths));    \n    return done();\n}\n\nFrame.prototype.arraylength = function(done) {\n    var ref = this._stack.pop();\n    this._stack.push(ref.length);\n    return done();\n}\n\nFrame.prototype.if_icmpeq = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());                                \n    var ref1 = this._stack.pop();\n    var ref2 = this._stack.pop();\n    this._ip = ref1 === ref2 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.if_icmpne = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());                                \n    var ref1 = this._stack.pop();\n    var ref2 = this._stack.pop();\n    this._ip = ref1 !== ref2 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.if_icmpgt = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());                                \n    var ref1 = this._stack.pop();\n    var ref2 = this._stack.pop();\n    this._ip = ref1 < ref2 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.if_icmple = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());\n    this._ip = this._stack.pop() >= this._stack.pop() ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.if_icmplt = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());\n    this._ip = this._stack.pop() > this._stack.pop() ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.if_icmpge = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());                                \n    var ref1 = this._stack.pop();\n    var ref2 = this._stack.pop();\n    this._ip = ref1 <= ref2 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.if_acmpeq = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());                                \n    var ref1 = this._stack.pop();\n    var ref2 = this._stack.pop();\n    this._ip = ref1 === ref2 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.if_acmpne = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());                                \n    var ref1 = this._stack.pop();\n    var ref2 = this._stack.pop();\n    this._ip = ref1 !== ref2 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.ifne = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());\n    this._ip = this._stack.pop() !== 0 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.ifeq = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());\n    this._ip = this._stack.pop() === 0 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.iflt = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());\n    this._ip = this._stack.pop() < 0 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.ifge = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());\n    this._ip = this._stack.pop() >= 0 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.ifgt = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());\n    this._ip = this._stack.pop() > 0 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.ifle = function(done) {\n    var jmp = this._ip - 1 + Numeric.getInt(this._read16());\n    this._ip = this._stack.pop() <= 0 ? jmp : this._ip;\n    return done();\n}\n\nFrame.prototype.i2l = function(done) {\n    return done();\n}\n\nFrame.prototype.i2f = function(done) {\n    return done();\n}\n\nFrame.prototype.i2d = function(done) {\n    return done();\n}\n\nFrame.prototype.i2b = function(done) {\n    return done();\n}\n\nFrame.prototype.i2c = function(done) {\n    return done();\n}\n\nFrame.prototype.i2s = function(done) {\n    return done();\n}\n\nFrame.prototype.l2i = function(done) {\n    return done();\n}\n\nFrame.prototype.l2d = function(done) {\n    return done();\n}\n\nFrame.prototype.l2f = function(done) {\n    return done();\n}\n\nFrame.prototype.d2i = function(done) {\n    return done();\n}\n\nFrame.prototype.d2l = function(done) {\n    return done();\n}\n\nFrame.prototype.d2f = function(done) {\n    return done();\n}\n\nFrame.prototype.f2d = function(done) {\n    return done();\n}\n\nFrame.prototype.f2i = function(done) {\n    return done();\n}\n\nFrame.prototype.f2l = function(done) {\n    return done();\n}\n\nFrame.prototype.goto = function(done) {\n    this._ip += Numeric.getInt(this._read16()) - 1;\n    return done();\n}\n\nFrame.prototype.goto_w = function(done) {\n    this._ip += Numeric.getInt(this._read32()) - 1;\n    return done();\n}\n\nFrame.prototype.ifnull = function(done) {\n    var ref = this._stack.pop();\n    if (!ref) {\n        this._ip += Numeric.getInt(this._read16()) - 1;\n    }\n    return done();\n}\n\nFrame.prototype.ifnonnull = function(done) {\n    var ref = this._stack.pop();\n    if (!!ref) {\n        this._ip += Numeric.getInt(this._read16()) - 1;\n    }\n    return done();\n}\n\nFrame.prototype.putfield = function(done) {\n    var idx = this._read16();\n    var fieldName = this._cp[this._cp[this._cp[idx].name_and_type_index].name_index].bytes;    \n    var val = this._stack.pop();\n    var obj = this._stack.pop();\n    if (!obj) {\n        this._throw(CLASSES.newException(\"java/lang/NullPointerException\"));\n    } else {\n        obj[fieldName] = val;\n    }\n    return done();\n}\n\nFrame.prototype.getfield = function(done) {    \n    var idx = this._read16();\n    var fieldName = this._cp[this._cp[this._cp[idx].name_and_type_index].name_index].bytes;\n    var obj = this._stack.pop();\n    if (!obj) {\n        this._throw(CLASSES.newException(\"java/lang/NullPointerException\"));\n    } else {\n        this._stack.push(obj[fieldName]);\n    }\n    return done();\n}\n\n\nFrame.prototype.new = function(done) {\n    var idx = this._read16();\n    var className = this._cp[this._cp[idx].name_index].bytes;    \n    this._stack.push(CLASSES.newObject(className));\n    return done();\n}\n\nFrame.prototype.getstatic = function(done) {    \n    var idx = this._read16();\n    var className = this._cp[this._cp[this._cp[idx].class_index].name_index].bytes;\n    var fieldName = this._cp[this._cp[this._cp[idx].name_and_type_index].name_index].bytes;\n    this._stack.push(CLASSES.getStaticField(className, fieldName));\n    return done();\n}\n\nFrame.prototype.putstatic = function(done) {\n    var idx = this._read16();\n    var className = this._cp[this._cp[this._cp[idx].class_index].name_index].bytes;\n    var fieldName = this._cp[this._cp[this._cp[idx].name_and_type_index].name_index].bytes;\n    CLASSES.setStaticField(className, fieldName, this._stack.pop());\n    return done();\n}\n\nFrame.prototype.invokestatic = function(done) {\n    var self = this;\n    \n    var idx = this._read16();\n    \n    var className = this._cp[this._cp[this._cp[idx].class_index].name_index].bytes;\n    var methodName = this._cp[this._cp[this._cp[idx].name_and_type_index].name_index].bytes;\n    var signature = Signature.parse(this._cp[this._cp[this._cp[idx].name_and_type_index].signature_index].bytes);\n    \n    var args = [];\n    for (var i=0; i<signature.IN.length; i++) {\n        if (!signature.IN[i].isArray && [\"long\", \"double\"].indexOf(signature.IN[i].type) !== -1) {\n            args.unshift(\"\");\n            args.unshift(this._stack.pop());\n        } else {\n            args.unshift(this._stack.pop());\n        }\n    }\n    \n    var method = CLASSES.getStaticMethod(className, methodName, signature);\n    \n    if (method instanceof Frame) {\n        method.setPid(self._pid);\n        method.run(args, function(res) {\n            if (signature.OUT.length != 0) {                        \n               self._stack.push(res);\n            }\n            return done();\n        });\n    } else {\n        var res = method.apply(null, args);\n        if (signature.OUT.length != 0) {                        \n            self._stack.push(res);                        \n        }\n        return done();\n    }\n}    \n\n\nFrame.prototype.invokevirtual = function(done) {\n    var self = this;\n    \n    var idx = this._read16();\n    \n    var className = this._cp[this._cp[this._cp[idx].class_index].name_index].bytes;\n    var methodName = this._cp[this._cp[this._cp[idx].name_and_type_index].name_index].bytes;\n    var signature = Signature.parse(this._cp[this._cp[this._cp[idx].name_and_type_index].signature_index].bytes);\n    \n    var args = [];\n    for (var i=0; i<signature.IN.length; i++) {\n        if (!signature.IN[i].isArray && [\"long\", \"double\"].indexOf(signature.IN[i].type) !== -1) {\n            args.unshift(\"\");\n            args.unshift(this._stack.pop());\n        } else {\n            args.unshift(this._stack.pop());\n        }\n    }\n\n    \n    var instance = this._stack.pop();\n    var method = CLASSES.getMethod(className, methodName, signature);\n      \n    if (method instanceof Frame) {\n        args.unshift(instance);\n        method.setPid(self._pid);\n        method.run(args, function(res) {\n            if (signature.OUT.length != 0) {                        \n               self._stack.push(res);\n            }\n            return done();            \n        });\n    } else {\n        var res = method.apply(instance, args);        \n        if (signature.OUT.length != 0) {\n            self._stack.push(res);\n        }\n        return done();\n    }\n}\n\nFrame.prototype.invokespecial = function(done) {\n    var self = this;\n    \n    var idx = this._read16();\n    \n    var className = this._cp[this._cp[this._cp[idx].class_index].name_index].bytes;\n    var methodName = this._cp[this._cp[this._cp[idx].name_and_type_index].name_index].bytes;\n    var signature = Signature.parse(this._cp[this._cp[this._cp[idx].name_and_type_index].signature_index].bytes);\n    \n    var args = [];\n    for (var i=0; i<signature.IN.length; i++) {\n        if (!signature.IN[i].isArray && [\"long\", \"double\"].indexOf(signature.IN[i].type) !== -1) {\n            args.unshift(\"\");\n            args.unshift(this._stack.pop());\n        } else {\n            args.unshift(this._stack.pop());\n        }\n    }\n\n\n    var instance = this._stack.pop();\n    var ctor = CLASSES.getMethod(className, methodName, signature);\n    \n    if (ctor instanceof Frame) {\n        args.unshift(instance);\n        ctor.setPid(self._pid);\n        ctor.run(args, function() {\n            return done();\n        });\n    } else {\n        ctor.apply(instance, args);\n        return done();\n    }\n    \n}\n\nFrame.prototype.invokeinterface = function(done) {\n    var self = this;\n    \n    var idx = this._read16();\n    var argsNumber = this._read8();\n    var zero = this._read8();\n    \n    var className = this._cp[this._cp[this._cp[idx].class_index].name_index].bytes;\n    var methodName = this._cp[this._cp[this._cp[idx].name_and_type_index].name_index].bytes;\n    var signature = Signature.parse(this._cp[this._cp[this._cp[idx].name_and_type_index].signature_index].bytes);\n    \n    var args = [];\n    for (var i=0; i<signature.IN.length; i++) {\n        if (!signature.IN[i].isArray && [\"long\", \"double\"].indexOf(signature.IN[i].type) !== -1) {\n            args.unshift(\"\");\n            args.unshift(this._stack.pop());\n        } else {\n            args.unshift(this._stack.pop());\n        }\n    }\n\n\n    var instance = this._stack.pop();\n      \n    if (instance[methodName] instanceof Frame) {\n        args.unshift(instance);\n        instance[methodName].setPid(self._pid);\n        instance[methodName].run(args, function(res) {\n            if (signature.OUT.length != 0) {                        \n               self._stack.push(res);\n            }\n            return done();            \n        });\n    } else {\n        var res = instance[methodName].apply(instance, args);\n        if (signature.OUT.length != 0) {\n            self._stack.push(res);\n        }\n        return done();\n    }\n}\n\nFrame.prototype.jsr = function(done) {\n    var jmp = this._read16();\n    this._stack.push(this._ip);\n    this._ip = jmp;\n    return done();\n}\n\nFrame.prototype.jsr_w = function(done) {\n    var jmp = this._read32();\n    this._stack.push(this._ip);\n    this._ip = jmp;\n    return done();\n}\n\nFrame.prototype.ret = function(done) {   \n    var idx = this._widened ? this._read16() : this._read8();\n    this._ip = this._locals[idx]; \n    this._widened = false;\n    return done();\n}\n\nFrame.prototype.tableswitch = function(done) {\n\n    var startip = this._ip;\n    var jmp;\n\n    while ((this._ip % 4) != 0) {\n        this._ip++;\n    }\n        \n    var def = this._read32();\n    var low = this._read32();\n    var high = this._read32();\n    var val = this._stack.pop();\n    \n    if (val < low || val > high) {\n        jmp = def;\n    } else {\n        this._ip  += (val - low) << 2;\n        jmp = this._read32();        \n    }    \n    \n    this._ip = startip - 1 + Numeric.getInt(jmp);\n    \n    return done();\n}\n\nFrame.prototype.lookupswitch = function(done) {\n\n    var startip = this._ip;\n\n    while ((this._ip % 4) != 0) {\n        this._ip++;\n    }\n        \n    var jmp = this._read32();\n    var size = this._read32();\n    var val = this._stack.pop();\n    \n    lookup:\n        for(var i=0; i<size; i++) {\n            var key = this._read32();\n            var offset = this._read32();\n            if (key === val) {\n                jmp = offset;\n            }\n            if (key >= val) {\n                break lookup;    \n            }\n        }\n      \n    this._ip = startip - 1 + Numeric.getInt(jmp);\n    \n    return done();\n}\n\nFrame.prototype.instanceof = function(done) {\n    var idx = this._read16();\n    var className = this._cp[this._cp[idx].name_index].bytes;\n    var obj = this._stack.pop();\n    if (obj.getClassName() === className) {\n        this._stack.push(true);\n    } else {\n        this._stack.push(false);\n    }\n    return done();\n}\n\nFrame.prototype.checkcast = function(done) {\n    var idx = this._read16();\n    var type = this._cp[this._cp[idx].name_index].bytes;\n    return done();\n}\n\n\nFrame.prototype.athrow = function(done) {\n    this._throw(this._stack.pop());\n    return done();\n}\n\nFrame.prototype.wide = function(done) {\n    this._widened = true;\n    return done();\n}\n\nFrame.prototype.monitorenter = function(done) {\n    var obj = this._stack.pop();\n    if (!obj) {\n        this._throw(CLASSES.newException(\"java/lang/NullPointerException\"));\n    } else if (obj.hasOwnProperty(\"$lock$\")) {\n        this._stack.push(obj);\n        this._ip--;\n        SCHEDULER.yield();\n    } else {\n        obj[\"$lock$\"] = \"locked\";\n    }\n    return done();\n}\n\nFrame.prototype.monitorexit = function(done) {\n    var obj = this._stack.pop();\n    if (!obj) {\n        this._throw(CLASSES.newException(\"java/lang/NullPointerException\"));\n    } else {\n        delete obj[\"$lock$\"];\n        SCHEDULER.yield();\n    }\n    return done();\n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/util/numeric.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nmodule.exports.getByte = function(v) {\n    n = parseInt(v, 10) & 0xff;\n    if (n > 0x7F) {\n        n = -((n & 0x7F) ^ 0x7F) - 1;\n    }\n    return n\n}\n\nmodule.exports.getInt = function(v) {\n    n = parseInt(v, 10) & 0xffff;\n    if (n > 0x7FFF) {\n        n = -((n & 0x7FFF) ^ 0x7FFF) - 1;\n    }\n    return n\n}\n\nmodule.exports.getLong = function(bytes) {\n    var l = 0;\n    for(var i = 0; i < 8; i++) {\n       l <<= 8;\n       l ^= bytes[i] & 0xFF;\n    }\n    return l;\n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/classfile/signature.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\n\nvar TYPE = module.exports.TYPE = {\n    boolean:    'Z',\n    byte:       'B',\n    char:       'C',\n    double:     'D', \n    float:      'F',  \n    int:        'I',  \n    long:       'J',  \n    object:     'L',  \n    short:      'S',  \n    void:       'V',  \n    array:      '[',\n    toString: function(s) {\n        for(var type in this) {\n            if (this[type] === s) {\n                return type;\n            }\n        }\n        return null;\n    }\n};\n\n\nvar _parse = function(part) {\n    var res = [];\n    if (part != '') {\n        var isArray = false;\n        var pos = 0;\n        while (pos < part.length) {\n            switch(part[pos]) {\n                case TYPE.boolean:\n                case TYPE.byte:\n                case TYPE.char:\n                case TYPE.double:\n                case TYPE.float:\n                case TYPE.int:\n                case TYPE.long:    \n                case TYPE.short:\n                    res.push( { type: TYPE.toString(part[pos]), isArray: isArray } );\n                    isArray = false;\n                    break;\n                case TYPE.object:\n                    var className = '';\n                    while (part[++pos] !== ';') {\n                        className += part[pos];\n                    }\n                    res.push( { type: \"object\", isArray: isArray, className: className } );\n                    isArray = false;\n                    break;                                \n                case TYPE.array:\n                    isArray = true;\n                    break;\n            }\n            pos++;\n        }\n    }\n    return res;\n}\n\nvar parse = module.exports.parse = function(s) {\n    \n    var IN = s.split(')')[0].substr(1);\n    var OUT = s.split(')')[1];\n        \n    return {\n        IN: _parse(IN),\n        OUT: _parse(OUT),\n        toString: new Function(util.format(\"return \\\"%s\\\"\", s))\n    };\n};\n\n\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/threads.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar Threads = module.exports = function() {\n    this.threads = [];\n    this.empty = [];\n}\n\nThreads.prototype.add = function(thread) {\n    if (this.empty.length > 0) {\n        var pid = this.empty.pop();\n        this.threads[pid] = thread;\n        return pid;\n    } else {\n        return this.threads.push(thread) - 1;\n    }\n}\n\nThreads.prototype.remove = function(pid) {\n    this.empty.push(pid);\n    this.threads[pid] = null;\n}\n\nThreads.prototype.count = function() {\n    return this.threads.length - this.empty.length;\n}\n\nThreads.prototype.getThread = function(pid) {\n    return this.threads[pid];\n}\n\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/scheduler.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar MODE = {\n    NORMAL: 0,\n    SYNC:   1,\n    YIELD:  2\n};\n\nvar Scheduler = module.exports = function(mticks) {\n    if (this instanceof Scheduler) {\n        this._ticks = 0;\n        this._mode = MODE.NORMAL;\n    } else {\n        return new Scheduler(mticks);\n    }\n}\n\nScheduler.prototype.tick = function(pid, fn) {\n    switch(this._mode) {\n        case MODE.SYNC:\n            fn();\n            break;\n        case MODE.YIELD:\n            this._mode = MODE.NORMAL;\n            this._ticks = 0;\n            (setImmediate || process.nextTick)(fn);\n            break;\n        case MODE.NORMAL:\n            if (++this._ticks > THREADS.getThread(pid).getPriority()) {\n                this._ticks = 0;\n                (setImmediate || process.nextTick)(fn);\n            } else {\n                fn();\n            }\n            break;\n    }\n}\n\nScheduler.prototype.yield = function() {\n    this._mode = MODE.YIELD;\n}\n\nScheduler.prototype.sync = function(fn) {\n    this._mode = MODE.SYNC;\n    fn();\n    this._mode = MODE.NORMAL;\n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/logger.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\n\nvar LEVELS = {\n    DEBUG:  1<<0,\n    ERROR:  1<<1,\n    INFO:   1<<2,\n    WARM:   1<<3,\n    check: function(levels, level) {\n        return (levels & level) === level;\n    }\n};\n\nvar Logger = module.exports = function(levels) {\n    if (this instanceof Logger) {\n        this.levels = levels || ( LEVELS.DEBUG | LEVELS.ERROR | LEVELS.INFO | LEVELS.WARM );\n    } else {\n        return new Logger(levels);\n    }\n}\n\nLogger.prototype.setLogLevel = function(levels) {\n    this.levels = levels;\n}\n\nLogger.prototype.debug = function(msg) {\n    if (LEVELS.check(this.levels, LEVELS.DEBUG)) {\n        util.debug(msg);\n    }\n}\n\nLogger.prototype.error = function(msg) {\n    if (LEVELS.check(this.levels, LEVELS.ERROR)) {\n        util.error(msg);\n    }\n}\n\nLogger.prototype.info = function(msg) {\n    if (LEVELS.check(this.levels, LEVELS.INFO)) {\n        util.print(\"INFO: \" + msg);\n    }\n}\n\nLogger.prototype.warn = function(msg) {\n    if (LEVELS.check(this.levels, LEVELS.WARM)) {\n        util.print(\"WARN: \" + msg);\n    }\n}","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/opcodes.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar OPCODES = module.exports = {\n    \"nop\": 0x00,\n    \"aconst_null\": 0x01,\n    \"iconst_m1\": 0x02,\n    \"iconst_0\": 0x03,\n    \"iconst_1\": 0x04,\n    \"iconst_2\": 0x05,\n    \"iconst_3\": 0x06,\n    \"iconst_4\": 0x07,\n    \"iconst_5\": 0x08,\n    \"lconst_0\": 0x09,\n    \"lconst_1\": 0x0A,\n    \"fconst_0\": 0x0B,\n    \"fconst_1\": 0x0C,\n    \"fconst_2\": 0x0D,\n    \"dconst_0\": 0x0E,\n    \"dconst_1\": 0x0F,\n    \"bipush\": 0x10,\n    \"sipush\": 0x11,\n    \"ldc\": 0x12,\n    \"ldc_w\": 0x13,\n    \"ldc2_w\": 0x14,\n    \"iload\": 0x15,\n    \"lload\": 0x16,\n    \"fload\": 0x17,\n    \"dload\": 0x18,\n    \"aload\": 0x19,\n    \"iload_0\": 0x1A,\n    \"iload_1\": 0x1B,\n    \"iload_2\": 0x1C,\n    \"iload_3\": 0x1D,\n    \"lload_0\": 0x1E,\n    \"lload_1\": 0x1F,\n    \"lload_2\": 0x20,\n    \"lload_3\": 0x21,\n    \"fload_0\": 0x22,\n    \"fload_1\": 0x23,\n    \"fload_2\": 0x24,\n    \"fload_3\": 0x25,\n    \"dload_0\": 0x26,\n    \"dload_1\": 0x27,\n    \"dload_2\": 0x28,\n    \"dload_3\": 0x29,\n    \"aload_0\": 0x2A,\n    \"aload_1\": 0x2B,\n    \"aload_2\": 0x2C,\n    \"aload_3\": 0x2D,\n    \"iaload\": 0x2E,\n    \"laload\": 0x2F,\n    \"faload\": 0x30,\n    \"daload\": 0x31,\n    \"aaload\": 0x32,\n    \"baload\": 0x33,\n    \"caload\": 0x34,\n    \"saload\": 0x35,\n    \"istore\": 0x36,\n    \"lstore\": 0x37,\n    \"fstore\": 0x38,\n    \"dstore\": 0x39,\n    \"astore\": 0x3A,\n    \"istore_0\": 0x3B,\n    \"istore_1\": 0x3C,\n    \"istore_2\": 0x3D,\n    \"istore_3\": 0x3E,\n    \"lstore_0\": 0x3F,\n    \"lstore_1\": 0x40,\n    \"lstore_2\": 0x41,\n    \"lstore_3\": 0x42,\n    \"fstore_0\": 0x43,\n    \"fstore_1\": 0x44,\n    \"fstore_2\": 0x45,\n    \"fstore_3\": 0x46,\n    \"dstore_0\": 0x47,\n    \"dstore_1\": 0x48,\n    \"dstore_2\": 0x49,\n    \"dstore_3\": 0x4A,\n    \"astore_0\": 0x4B,\n    \"astore_1\": 0x4C,\n    \"astore_2\": 0x4D,\n    \"astore_3\": 0x4E,\n    \"iastore\": 0x4F,\n    \"lastore\": 0x50,\n    \"fastore\": 0x51,\n    \"dastore\": 0x52,\n    \"aastore\": 0x53,\n    \"bastore\": 0x54,\n    \"castore\": 0x55,\n    \"sastore\": 0x56,\n    \"pop\": 0x57,\n    \"pop2\": 0x58,\n    \"dup\": 0x59,\n    \"dup_x1\": 0x5A,\n    \"dup_x2\": 0x5B,\n    \"dup2\": 0x5C,\n    \"dup2_x1\": 0x5D,\n    \"dup2_x2\": 0x5E,\n    \"swap\": 0x5F,\n    \"iadd\": 0x60,\n    \"ladd\": 0x61,\n    \"fadd\": 0x62,\n    \"dadd\": 0x63,\n    \"isub\": 0x64,\n    \"lsub\": 0x65,\n    \"fsub\": 0x66,\n    \"dsub\": 0x67,\n    \"imul\": 0x68,\n    \"lmul\": 0x69,\n    \"fmul\": 0x6A,\n    \"dmul\": 0x6B,\n    \"idiv\": 0x6C,\n    \"ldiv\": 0x6D,\n    \"fdiv\": 0x6E,\n    \"ddiv\": 0x6F,\n    \"irem\": 0x70,\n    \"lrem\": 0x71,\n    \"frem\": 0x72,\n    \"drem\": 0x73,\n    \"ineg\": 0x74,\n    \"lneg\": 0x75,\n    \"fneg\": 0x76,\n    \"dneg\": 0x77,\n    \"ishl\": 0x78,\n    \"lshl\": 0x79,\n    \"ishr\": 0x7A,\n    \"lshr\": 0x7B,\n    \"iushr\": 0x7C,\n    \"lushr\": 0x7D,\n    \"iand\": 0x7E,\n    \"land\": 0x7F,\n    \"ior\": 0x80,\n    \"lor\": 0x81,\n    \"ixor\": 0x82,\n    \"lxor\": 0x83,\n    \"iinc\": 0x84,\n    \"i2l\": 0x85,\n    \"i2f\": 0x86,\n    \"i2d\": 0x87,\n    \"l2i\": 0x88,\n    \"l2f\": 0x89,\n    \"l2d\": 0x8A,\n    \"f2i\": 0x8B,\n    \"f2l\": 0x8C,\n    \"f2d\": 0x8D,\n    \"d2i\": 0x8E,\n    \"d2l\": 0x8F,\n    \"d2f\": 0x90,\n    \"i2b\": 0x91,\n    \"i2c\": 0x92,\n    \"i2s\": 0x93,\n    \"lcmp\": 0x94,\n    \"fcmpl\": 0x95,\n    \"fcmpg\": 0x96,\n    \"dcmpl\": 0x97,\n    \"dcmpg\": 0x98,\n    \"ifeq\": 0x99,\n    \"ifne\": 0x9A,\n    \"iflt\": 0x9B,\n    \"ifge\": 0x9C,\n    \"ifgt\": 0x9D,\n    \"ifle\": 0x9E,\n    \"if_icmpeq\": 0x9F,\n    \"if_icmpne\": 0xA0,\n    \"if_icmplt\": 0xA1,\n    \"if_icmpge\": 0xA2,\n    \"if_icmpgt\": 0xA3,\n    \"if_icmple\": 0xA4,\n    \"if_acmpeq\": 0xA5,\n    \"if_acmpne\": 0xA6,\n    \"goto\": 0xA7,\n    \"jsr\": 0xA8,\n    \"ret\": 0xA9,\n    \"tableswitch\": 0xAA,\n    \"lookupswitch\": 0xAB,\n    \"ireturn\": 0xAC,\n    \"lreturn\": 0xAD,\n    \"freturn\": 0xAE,\n    \"dreturn\": 0xAF,\n    \"areturn\": 0xB0,\n    \"return\": 0xB1,\n    \"getstatic\": 0xB2,\n    \"putstatic\": 0xB3,\n    \"getfield\": 0xB4,\n    \"putfield\": 0xB5,\n    \"invokevirtual\": 0xB6,\n    \"invokespecial\": 0xB7,\n    \"invokestatic\": 0xB8,\n    \"invokeinterface\": 0xB9,\n    \"new\": 0xBB,\n    \"newarray\": 0xBC,\n    \"anewarray\": 0xBD,\n    \"arraylength\": 0xBE,\n    \"athrow\": 0xBF,\n    \"checkcast\": 0xC0,\n    \"instanceof\": 0xC1,\n    \"monitorenter\": 0xC2,\n    \"monitorexit\": 0xC3,\n    \"wide\": 0xC4,\n    \"multianewarray\": 0xC5,\n    \"ifnull\": 0xC6,\n    \"ifnonnull\": 0xC7,\n    \"goto_w\": 0xC8,\n    \"jsr_w\": 0xC9,\n    \n    toString: function(opCode) {\n        if ( !this._cache ) {\n            this._cache = new Array(256);\n        }\n        if ( this._cache[opCode] ) {\n            return this._cache[opCode]; \n        }\n        for(var opName in this) {\n            if (this[opName] === opCode) {\n                return this._cache[opCode] = opName;\n            }\n        }\n        return null;\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/thread.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar Thread = module.exports = function(name) {\n    if (this instanceof Thread) {\n        this.name = name || \"noname\";\n        this.priority = (Thread.MAX_PRIORITY + Thread.MIN_PRIORITY) >> 1;\n    } else {\n        return new Thread(name);\n    }\n}\n\nThread.prototype.setName = function(name) {\n    this.name = name;\n}\n\nThread.prototype.getName = function(name) {\n    return this.name;\n}\n\nThread.MIN_PRIORITY = 0;\nThread.MAX_PRIORITY = 100;\n\nThread.prototype.setPriority = function(priority) {\n    this.priority = priority;\n}\n\nThread.prototype.getPriority = function() {\n    return this.priority;\n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/Gruntfile.js":"'use strict';\n\nmodule.exports = function (grunt) {\n\n    // Project configuration.\n    grunt.initConfig({\n        mochaTest: {\n            test: {\n                options: {\n                    reporter: 'spec'\n                },\n                src: ['test/**/*.js']\n            }\n        }\n    });\n\n    // These plugins provide necessary tasks.\n    grunt.loadNpmTasks('grunt-mocha-test');\n\n    grunt.registerTask('test', 'mochaTest');\n\n};","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/arraytypes.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar ARRAY_TYPE = module.exports = {\n    T_BOOLEAN: 4,\n    T_CHAR: 5,\n    T_FLOAT: 6,\n    T_DOUBLE: 7,\n    T_BYTE: 8,\n    T_SHORT: 9,\n    T_INT: 10,\n    T_LONG: 11\n}","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/io/IOException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Exception = require(\"../lang/Exception.js\");\n\nvar IOException = module.exports = function() {\n    if (this instanceof Exception) {\n        Exception.call(this);\n    } else {\n        return new IOException();\n    }\n}\n\nutil.inherits(IOException, Exception);\n\nIOException.getClassName = function() {\n    return \"java/io/IOException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/Exception.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Throwable = require(\"./Throwable.js\");\n\nvar Exception = module.exports = function() {\n    if (this instanceof Exception) {\n        Throwable.call(this);\n    } else {\n        return new Exception();\n    }\n}\n\nutil.inherits(Exception, Throwable);\n\nException.getClassName = function() {\n    return \"java/lang/Exception\";    \n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/Throwable.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\n\nvar Throwable = module.exports = function() {\n    if (this instanceof Throwable) {\n        this.message = \"\";\n        this.cause = null;\n    } else {\n        return new Throwable();\n    }\n}\n\nutil.inherits(Throwable, Error);\n\nThrowable.getClassName = function() {\n    return \"java/lang/Throwable\";    \n}\n\nThrowable.prototype[\"<init>\"] = function() {\n    switch(arguments.length) {\n        case 1:\n            if (typeof arguments[0] !== \"object\") {\n                this.message = arguments[0];\n            } else {\n                this.cause = arguments[0];\n            }\n            break;\n        case 2:\n            this.message = arguments[0];\n            this.cause = arguments[1];\n            break;\n    }\n}\n\nThrowable.prototype.initCause = function(cause) {\n    this.cause = cause;\n}\n\nThrowable.prototype.getMessage = function() {\n    return this.message;\n}\n\nThrowable.prototype.getCause = function() {\n    return this.cause;\n}\n\nThrowable.prototype.toString = function() {\n    if (this.message) {\n        return util.format(\"Exception %s: %s\", this.getClassName(), this.message);\n    }\n    return util.format(\"Exception %s\", this.getClassName());\n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/io/PrintStream.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\n\nvar out = module.exports = function() {\n    if (this instanceof out) {        \n    } else {\n        return new out();\n    }\n};\n\nout.getClassName = function() {\n    return \"java/io/PrintStream\";\n}\n \nout.prototype[\"print\"] = function() {\n    util.print.apply(null, arguments);\n};\n\nout.prototype[\"println\"] = function() {\n    util.print.apply(null, arguments);\n    util.print(\"\\n\");\n};\n\nout.prototype[\"format\"] = function(fmt, args) {\n    util.print(util.format.apply(null, [fmt].concat(args)));\n}\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/ArithmeticException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar ArithmeticException = module.exports = function() {\n    if (this instanceof ArithmeticException) {\n        RuntimeException.call(this);\n    } else {\n        return new ArithmeticException();\n    }\n}\n\nutil.inherits(ArithmeticException, RuntimeException);\n\nArithmeticException.getClassName = function() {\n    return \"java/lang/ArithmeticException\";    \n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/RuntimeException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Exception = require(\"./Exception.js\");\n\nvar RuntimeException = module.exports = function() {\n    if (this instanceof Exception) {\n        Exception.call(this);\n    } else {\n        return new RuntimeException();\n    }\n}\n\nutil.inherits(RuntimeException, Exception);\n\nRuntimeException.getClassName = function() {\n    return \"java/lang/RuntimeException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/ArrayIndexOutOfBoundsException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar IndexOutOfBoundsException = require(\"./IndexOutOfBoundsException.js\");\n\nvar ArrayIndexOutOfBoundsException = module.exports = function() {\n    if (this instanceof IndexOutOfBoundsException) {\n        IndexOutOfBoundsException.call(this);\n    } else {\n        return new ArrayIndexOutOfBoundsException();\n    }\n}\n\nutil.inherits(ArrayIndexOutOfBoundsException, IndexOutOfBoundsException);\n\nArrayIndexOutOfBoundsException.getClassName = function() {\n    return \"java/lang/ArrayIndexOutOfBoundsException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/IndexOutOfBoundsException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar IndexOutOfBoundsException = module.exports = function() {\n    if (this instanceof IndexOutOfBoundsException) {\n        RuntimeException.call(this);\n    } else {\n        return new IndexOutOfBoundsException();\n    }\n}\n\nutil.inherits(IndexOutOfBoundsException, RuntimeException);\n\nIndexOutOfBoundsException.getClassName = function() {\n    return \"java/lang/IndexOutOfBoundsException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/ArrayStoreException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar ArrayStoreException = module.exports = function() {\n    if (this instanceof ArrayStoreException) {\n        RuntimeException.call(this);\n    } else {\n        return new ArrayStoreException();\n    }\n}\n\nutil.inherits(ArrayStoreException, RuntimeException);\n\nArrayStoreException.getClassName = function() {\n    return \"java/lang/ArrayStoreException\";    \n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/ClassCastException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar ClassCastException = module.exports = function() {\n    if (this instanceof ClassCastException) {\n        RuntimeException.call(this);\n    } else {\n        return new ClassCastException();\n    }\n}\n\nutil.inherits(ClassCastException, RuntimeException);\n\nClassCastException.getClassName = function() {\n    return \"java/lang/ClassCastException\";    \n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/Class.js":"\nvar Clazz = module.exports = function(className, clazz) {\n    if (this instanceof Clazz) {\n        this._className = className; \n        this._clazz = clazz;\n    } else {\n        return new Clazz(className, clazz);\n    }\n}\n\nClazz.getClassName = function() {\n    return \"java/lang/Class\";\n}\n \nClazz.forName = function(className) {\n    return new Clazz(className, CLASSES.getClass(className));\n}\n\nClazz.prototype.newInstance = function() {\n    return CLASSES.newObject(this._className);\n\n}","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/ClassNotFoundException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Exception = require(\"./Exception.js\");\n\nvar ClassNotFoundException = module.exports = function() {\n    if (this instanceof Exception) {\n        Exception.call(this);\n    } else {\n        return new ClassNotFoundException();\n    }\n}\n\nutil.inherits(ClassNotFoundException, Exception);\n\nClassNotFoundException.getClassName = function() {\n    return \"java/lang/ClassNotFoundException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/ClassNotSupportedException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Exception = require(\"./Exception.js\");\n\nvar ClassNotSupportedException = module.exports = function() {\n    if (this instanceof Exception) {\n        Exception.call(this);\n    } else {\n        return new ClassNotSupportedException();\n    }\n}\n\nutil.inherits(ClassNotSupportedException, Exception);\n\nClassNotSupportedException.getClassName = function() {\n    return \"java/lang/ClassNotSupportedException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/IllegalArgumentException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar IllegalArgumentException = module.exports = function() {\n    if (this instanceof IllegalArgumentException) {\n        RuntimeException.call(this);\n    } else {\n        return new IllegalArgumentException();\n    }\n}\n\nutil.inherits(IllegalArgumentException, RuntimeException);\n\nIllegalArgumentException.getClassName = function() {\n    return \"java/lang/IllegalArgumentException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/IllegalMonitorStateException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar IllegalMonitorStateException = module.exports = function() {\n    if (this instanceof IllegalMonitorStateException) {\n        RuntimeException.call(this);\n    } else {\n        return new IllegalMonitorStateException();\n    }\n}\n\nutil.inherits(IllegalMonitorStateException, RuntimeException);\n\nIllegalMonitorStateException.getClassName = function() {\n    return \"java/lang/IllegalMonitorStateException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/IllegalThreadStateException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar IllegalThreadStateException = module.exports = function() {\n    if (this instanceof IllegalThreadStateException) {\n        IllegalArgumentException.call(this);\n    } else {\n        return new IllegalThreadStateException();\n    }\n}\n\nutil.inherits(IllegalThreadStateException, IllegalArgumentException);\n\nIllegalThreadStateException.getClassName = function() {\n    return \"java/lang/IllegalThreadStateException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/IlligalAccessException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Exception = require(\"./Exception.js\");\n\nvar IlligalAccessException = module.exports = function() {\n    if (this instanceof Exception) {\n        Exception.call(this);\n    } else {\n        return new IlligalAccessException();\n    }\n}\n\nutil.inherits(IlligalAccessException, Exception);\n\nIlligalAccessException.getClassName = function() {\n    return \"java/lang/IlligalAccessException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/InstantiationException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Exception = require(\"./Exception.js\");\n\nvar InstantiationException = module.exports = function() {\n    if (this instanceof Exception) {\n        Exception.call(this);\n    } else {\n        return new InstantiationException();\n    }\n}\n\nutil.inherits(InstantiationException, Exception);\n\nInstantiationException.getClassName = function() {\n    return \"java/lang/InstantiationException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/Integer.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar Integer = module.exports = function() {\n    if (this instanceof Integer) {\n    } else {\n        return new Integer();\n    }\n}\n\nInteger.getClassName = function() {\n    return \"java/lang/Integer\";\n}\n \nInteger.parseInt = function() {\n    return parseInt.apply(null, arguments);\n}\n\nInteger.valueOf = function() {\n    if (arguments.length === 0) return \"0\";\n    return arguments[0].toString();\n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/InterruptedException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Exception = require(\"./Exception.js\");\n\nvar InterruptedException = module.exports = function() {\n    if (this instanceof Exception) {\n        Exception.call(this);\n    } else {\n        return new InterruptedException();\n    }\n}\n\nutil.inherits(InterruptedException, Exception);\n\nInterruptedException.getClassName = function() {\n    return \"java/lang/InterruptedException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/NegativeArraySizeException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar NegativeArraySizeException = module.exports = function() {\n    if (this instanceof NegativeArraySizeException) {\n        RuntimeException.call(this);\n    } else {\n        return new NegativeArraySizeException();\n    }\n}\n\nutil.inherits(NegativeArraySizeException, RuntimeException);\n\nNegativeArraySizeException.getClassName = function() {\n    return \"java/lang/NegativeArraySizeException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/NoSuchMethodException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Exception = require(\"./Exception.js\");\n\nvar NoSuchMethodException = module.exports = function() {\n    if (this instanceof Exception) {\n        Exception.call(this);\n    } else {\n        return new NoSuchMethodException();\n    }\n}\n\nutil.inherits(NoSuchMethodException, Exception);\n\nNoSuchMethodException.getClassName = function() {\n    return \"java/lang/NoSuchMethodException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/NullPointerException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar NullPointerException = module.exports = function() {\n    if (this instanceof NullPointerException) {\n       RuntimeException.call(this);\n    } else {\n        return new NullPointerException();\n    }\n}\n\nutil.inherits(NullPointerException, RuntimeException);\n\nNullPointerException.getClassName = function() {\n    return \"java/lang/NullPointerException\";    \n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/NumberFormatException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar NumberFormatException = module.exports = function() {\n    if (this instanceof NumberFormatException) {\n        IllegalArgumentException.call(this);\n    } else {\n        return new NumberFormatException();\n    }\n}\n\nutil.inherits(NumberFormatException, IllegalArgumentException);\n\nNumberFormatException.getClassName = function() {\n    return \"java/lang/NumberFormatException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/Object.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\n\nvar Object = module.exports = function() {\n    if (this instanceof Object) {\n        this._hashCode = null;\n    } else {\n        return new Object();\n    }\n}\n\nObject.getClassName = function() {\n    return \"java/lang/Object\";\n}\n \n\nObject.prototype[\"<init>\"] = function() {\n    return this;\n}\n\nObject.prototype[\"toString\"] = function() {\n    return this.getClassName() + \"@\" +  this.hashCode().toString(16);\n}\n\nObject.prototype[\"hashCode\"] = function() {\n    if (!this._hashCode) {\n        this._hashCode = Math.floor(Math.random() * 0xffffffff);\n    }\n    return this._hashCode;\n}\n\nObject.prototype[\"equals\"] = function() {\n    return this === arguments[0];\n}\n\nObject.prototype[\"clone\"] = function() {\n    var o = {};\n    for(var name in this) {\n        o[name] = this[name];\n    }\n    return o;\n}","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/SecurityException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar SecurityException = module.exports = function() {\n    if (this instanceof SecurityException) {\n        RuntimeException.call(this);\n    } else {\n        return new SecurityException();\n    }\n}\n\nutil.inherits(SecurityException, RuntimeException);\n\nSecurityException.getClassName = function() {\n    return \"java/lang/SecurityException\";    \n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/StringBuilder.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Object = require(\"./Object.js\");\n\nvar StringBuilder = module.exports = function(p) {\n    if (this instanceof StringBuilder) {\n        if (typeof p === \"number\") {\n            this._buf = new Array(p).join(' ');\n        } else {\n            this._buf = p || \"\";\n        }\n    } else {\n        return new StringBuilder(p);\n    }\n}\n\nutil.inherits(StringBuilder, Object);\n\nStringBuilder.getClassName = function() {\n    return \"java/lang/StringBuilder\";\n}\n \n\nStringBuilder.prototype[\"<init>\"] = function() {\n    for(var i=0; i<arguments.length; i++) {\n        this._buf += arguments[i].toString();\n    }\n    return this;\n}\n\nStringBuilder.prototype[\"append\"] = function() {\n    for(var i=0; i<arguments.length; i++) {\n        this._buf += arguments[i].toString();\n    }\n    return this;\n}\n\nStringBuilder.prototype[\"toString\"] = function() {\n    return this._buf.toString();\n}","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/StringIndexOutOfBoundsException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar StringIndexOutOfBoundsException = module.exports = function() {\n    if (this instanceof IndexOutOfBoundsException) {\n        IndexOutOfBoundsException.call(this);\n    } else {\n        return new StringIndexOutOfBoundsException();\n    }\n}\n\nutil.inherits(StringIndexOutOfBoundsException, IndexOutOfBoundsException);\n\nStringIndexOutOfBoundsException.getClassName = function() {\n    return \"java/lang/StringIndexOutOfBoundsException\";    \n}\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/String.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Object = require(\"./Object.js\");\n\nvar String = module.exports = function(s) {\n    if (this instanceof String) {\n        this._str = s;\n    } else {\n        return new String(s);\n    }\n}\n\nutil.inherits(String, Object);\n\nString.getClassName = function() {\n    return \"java/lang/String\";\n}\n \nString.prototype[\"<init>\"] = function() {\n    return this;\n}\n\nString.prototype[\"toString\"] = function() {\n    return this._str.toString();\n}\n\nString[\"valueOf\"] = function() {\n    if (arguments.length === 0) return \"\";\n    return arguments[0].toString();\n}","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/System.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\n\nvar System = module.exports = function() {\n    if (this instanceof System) {\n    } else {\n        return new System();\n    }\n}\n\nSystem.getClassName = function() {\n    return \"java/lang/System\";\n}\n \n\nSystem[\"exit\"] = function() {\n    process.exit();\n}\n\nSystem[\"out\"] = {\n    \"print\": function() {\n        util.print.apply(null, arguments);\n    },\n    \"println\": function() {\n        util.print.apply(null, arguments);\n        util.print(\"\\n\");\n    },\n    \"format\": function(fmt, args) {\n        util.print(util.format.apply(null, [fmt].concat(args)));\n    }\n}\n\nSystem[\"currentTimeMillis\"] = function() {\n    return new Date().getTime();\n}    \n\n\n\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/lang/Thread.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar Object = require(\"./Object.js\");\nvar Frame = require(\"./../../frame.js\");\nvar Thread = require(\"./../../thread.js\");\n\nvar AThread = module.exports = function() {\n    if (this instanceof AThread) {\n        this.thread = new Thread();\n    } else {\n        return new AThread();\n    }\n}\n\nutil.inherits(String, Object);\n\n\nAThread.getClassName = function() {\n    return \"java/lang/Thread\";\n}\n \nAThread.prototype[\"<init>\"] = function(instance) {\n    this._instance = instance;\n}\n\nAThread.prototype.setName = function(name) {\n    this.thread.setName(name);    \n}\n\nAThread.prototype.getName = function() {\n    return this.thread.getName();    \n}\n\nAThread.prototype.setPriority = function(priority) {\n    this.thread.setPriority(priority);    \n}\n\nAThread.prototype.getPriority = function() {\n    return this.thread.getPriority();    \n}\n\nAThread.prototype[\"start\"] = function() {\n    var self = this;\n    var pid = THREADS.add(this.thread);\n    if (this._instance[\"run\"] instanceof Frame) {\n        this._instance[\"run\"].setPid(pid);\n        this._instance[\"run\"].run([this._instance], function() {\n            THREADS.remove(pid);\n        });\n    } else {\n        self._instance[\"run\"]();\n        THREADS.remove(pid);\n    }\n};\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/util/EmptyStackException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar EmptyStackException = module.exports = function() {\n    if (this instanceof EmptyStackException) {\n        RuntimeException.call(this);\n    } else {\n        return new EmptyStackException();\n    }\n}\n\nutil.inherits(EmptyStackException, RuntimeException);\n\nEmptyStackException.getClassName = function() {\n    return \"java/lang/EmptyStackException.js\";    \n}\n\n","/home/travis/build/npmtest/node-npmtest-node-jvm/node_modules/node-jvm/libs/java/util/NoSuchElementException.js":"/*\n node-jvm\n Copyright (c) 2013 Yaroslav Gaponov <yaroslav.gaponov@gmail.com>\n*/\n\nvar util = require(\"util\");\nvar RuntimeException = require(\"./RuntimeException.js\");\n\nvar NoSuchMethodException = module.exports = function() {\n    if (this instanceof NoSuchMethodException) {\n        RuntimeException.call(this);\n    } else {\n        return new NoSuchMethodException();\n    }\n}\n\nutil.inherits(NoSuchMethodException, RuntimeException);\n\nNoSuchMethodException.getClassName = function() {\n    return \"java/lang/NoSuchMethodException\";    \n}\n\n"}